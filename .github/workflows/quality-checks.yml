# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Quality Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    # branches: [ master ]
  workflow_dispatch:

jobs:
  skip_check:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-22.04
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/*.md", "examples/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'

  lint:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Test dependencies
      run: |
        pip3 install --disable-pip-version-check -e .[test]

    - name: Lint
      run: |
        scripts/lint

  type_check: 
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-20.04
    strategy: 
      matrix: 
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps: 
    - uses: actions/checkout@v3 
    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v4 
      with: 
        python-version: ${{ matrix.python-version }} 
        cache: 'pip' 
    - name: Install Test dependencies 
      run: | 
        pip3 install --disable-pip-version-check -e .[test] 
    - name: Type Check 
      run: | 
        scripts/type_check 

  test: 
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-20.04
    strategy: 
      matrix: 
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
    steps: 
    - uses: actions/checkout@v3 
    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v4 
      with: 
        python-version: ${{ matrix.python-version }} 
        cache: 'pip' 
    - name: Install Test dependencies 
      run: | 
        pip3 install --disable-pip-version-check -e .[test] 
 
    - name: Test
      run: |
        scripts/test

  get_version:
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Retrieve version and Changelog
      id: get_version
      run: |
        echo icloudpd_version=$(cat pyproject.toml | grep version= | cut -d'"' -f 2) >> $GITHUB_OUTPUT
        echo 'icloudpd_changelog<<EOF' >> $GITHUB_OUTPUT
        scripts/extract_releasenotes CHANGELOG.md >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Log version and Changelog
      run: |
        echo "icloudpd_version=${{steps.get_version.outputs.icloudpd_version}}"
        echo "icloudpd_changelog=${{steps.get_version.outputs.icloudpd_changelog}}"

    outputs:
      icloudpd_version: ${{steps.get_version.outputs.icloudpd_version}}
      icloudpd_changelog: ${{steps.get_version.outputs.icloudpd_changelog}}

  build_package:
    needs: [get_version, skip_check]
    if: needs.skip_check.outputs.should_skip != 'true'
    uses: ./.github/workflows/build-package.yml
    with:
      icloudpd_version: ${{needs.get_version.outputs.icloudpd_version}}
